import mongoose, { Document, Schema } from "mongoose";
import { ITask } from "../task/task.model.js";

export interface IMeeting extends Document {
	_id: mongoose.Types.ObjectId;

	/** Owner of the meeting */
	userId: string;

	/** Title */
	title: string;

	/** Scheduled date */
	date: Date;

	/**
	 * Participants in the meeting other than the owner.
	 *
	 * The owner is always assumed to be in the meeting.
	 */
	participants: string[];

	/**
	 * Meeting transcript.
	 *
	 * If the transcript is set, it means the meeting already happened and was processed.
	 */
	transcript: string;

	/** Duration in minutes */
	duration: number;

	/** Summary generated by the LLM from the transcript */
	summary: string;

	/** Action items identified by the LLM from the transcript */
	actionItems: string[];

	// local
	tasks: ITask[];
}

const meetingSchema = new Schema<IMeeting>({
	userId: {
		type: String,
		required: true,
		index: true,
	},
	title: {
		type: String,
		required: true,
	},
	date: {
		type: Date,
		required: true,
	},
	participants: {
		type: [String],
		required: true,
	},
	duration: Number,
	transcript: String,
	summary: String,
	actionItems: [String],
});

export const Meeting = mongoose.model<IMeeting>("Meeting", meetingSchema);
